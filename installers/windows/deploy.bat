:::
::: Build a Release subdirectory of the current build directory.
::: This directory will contain everything needed to run OSCAR.
::: Then create an installer in Install subdirectory of current build directory.
:::
::: This should be run as the last step of a QT Build Release kit.
::: QT Shadow build should be specified (this is the QT default).
::: A command line parameter is optional.  Any text on the command line will be appended
::: to the file name of the installer.
:::
::: Requirements:
:::     Inno Setup - http://www.jrsoftware.org/isinfo.php, installed to default Program Files (x86) location
:::     gawk - http://gnuwin32.sourceforge.net/packages/gawk.htm, installed to somewhere in the PATH
:::
::: Three files should be placed in the OSCAR source code directory: OSCAR/OSCAR-code/oscar
:::     deploy.bat -- this file
:::     buildinstall.iss -- script for Inno Setup to create installer
:::     getBuildInfo.awk -- gawk script for extracting version fields from various files
:::
::: In QT Creator, select project, add an additional step to the build process for the Release
::: version (not needed for debug version).  This is a Custom Build Step and should run this
::: batch file (e.g., "E:\OSCAR\OSCAR-code\oscar\deploy.bat") in the default directory used
::: when you add a custom build step.
:::
::: Now just build or rebuild the Release version of the project, and WinDeployQt will be
::: run following creation of an installer in the shadow build directory.
:::
@echo off

setlocal
set toolDir=%~dp0
:::echo tooldir is %toolDir%

::: current directory is the shadow build directory
set shadowBuildDir=%cd%
:::echo shadowBuildDir is %shadowBuildDir%

set sourceDir=..\oscar
:::echo sourceDir is %sourceDir%

::: Now copy the base installation control file

copy %toolDir%buildInstall.iss %shadowBuildDir%

::: Create and copy installer control files
::: Create file with all version numbers etc. ready for use by buildinstall.iss
::: Extract the version info from various header files using gawk and
::: #define fields for each data item in buildinfo.iss which will be 
::: used by the installer script.

echo ; This script auto-generated by DEPLOY.BAT >%shadowBuildDir%\buildinfo.iss
gawk -f %toolDir%getBuildInfo.awk %sourcedir%\version.h >>%shadowBuildDir%\buildInfo.iss
gawk -f %toolDir%getBuildInfo.awk %sourcedir%\build_number.h >>%shadowBuildDir%\buildInfo.iss
gawk -f %toolDir%getBuildInfo.awk %sourcedir%\git_info.h >>%shadowBuildDir%\buildInfo.iss
echo %shadowBuildDir% | gawk -f %toolDir%getBuildInfo.awk >>%shadowBuildDir%\buildInfo.iss
echo #define MySuffix "%1" >>%shadowBuildDir%\buildinfo.iss
echo #define MySourceDir "%sourcedir%" >>%shadowBuildDir%\buildinfo.iss

::: Create Release directory and subdirectories
if exist %shadowBuildDir%\Release\*.* rmdir /s /q %shadowBuildDir%\Release
mkdir %shadowBuildDir%\Release
cd %shadowBuildDir%\Release
copy %shadowBuildDir%\oscar.exe

::: Now in Release subdirectory
if exist Help\*.* rmdir /s /q Help
mkdir Help
copy ..\help Help

if exist Html\*.* rmdir /s /q Html
mkdir Html
copy ..\html html

if exist Translations\*.* rmdir /s /q Translations
mkdir Translations
copy ..\translations Translations

::: Run deployment tool
windeployqt.exe --release --force --compiler-runtime OSCAR.exe

::: Clean up unwanted translation files
:::For unknown reasons, Win64 build copies the .ts files into the release directory, while Win32 does not
if exist Translations\*.ts del /q Translations\*.ts

::: Create installer
cd ..
:::"%ProgramFiles(x86)%\Inno Setup 5\compil32" /cc BuildInstall.iss
"%ProgramFiles(x86)%\Inno Setup 5\iscc" /Q BuildInstall.iss